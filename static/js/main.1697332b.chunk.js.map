{"version":3,"sources":["pages/LogIn.js","pages/Register.js","pages/Main.js","pages/Receta.js","pages/Profile.js","components/NavbarList.js","components/Navbar.js","components/Layout.js","pages/NotFound.js","components/App.js","registerServiceWorker.js","index.js"],"names":["LogIn","React","Component","Register","Main","Receta","Profile","Navbar","react_default","a","createElement","className","this","props","id","navId","react_router_dom","to","M","AutoInit","Fragment","data-target","NavbarList","Layout","components_Navbar","children","NotFound","App","components_Layout","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","container","document","getElementById","ReactDOM","render","components_App","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1697332b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass LogIn extends React.Component {\r\n  render() {\r\n    return \"LogIn\";\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n  render() {\r\n    return \"Register\";\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return \"Main\";\r\n  }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nclass Receta extends React.Component {\r\n  render() {\r\n    return \"Receta\";\r\n  }\r\n}\r\n\r\nexport default Receta;","import React from \"react\";\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    return \"Profile\";\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <ul className={this.props.className} id={this.props.navId}>\r\n          <li>\r\n            <Link to=\"/Profile\" className=\"text-decoration-none\">Perfil</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/Receta\" className=\"text-decoration-none\">Recetas</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\" className=\"text-decoration-none\">JavaScript</Link>\r\n          </li>\r\n        </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./css/theme.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport NavbarList from \"./NavbarList\"\r\n\r\nclass Navbar extends React.Component {\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"nav-extended main-light-2\">\r\n          <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo ml-2 text-decoration-none\">\r\n              <span className=\"font-weight-bold text-white\">Sin</span>\r\n              <span className=\"font-weight-light\">Azúcar</span>\r\n            </Link>\r\n            <Link to=\"/\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n              <i className=\"material-icons\">menu</i>\r\n            </Link>\r\n            <NavbarList navId=\"nav-mobile\" className=\"right hide-on-med-and-down\" />\r\n          </div>\r\n        </nav>\r\n        <NavbarList navId=\"mobile-demo\" className=\"sidenav\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Layout(props){\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Navbar/>\r\n        {props.children}\r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return <div><h1>Ups!</h1>\r\n    <br/>\r\n    Página no encontrada\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\r\nimport LogIn from \"../pages/LogIn\";\r\nimport Register from \"../pages/Register\";\r\nimport Main from \"../pages/Main\";\r\nimport Receta from \"../pages/Receta\";\r\nimport Profile from \"../pages/Profile\";\r\nimport Layout from \"./Layout\";\r\nimport NotFound from \"../pages/NotFound\";\r\n\r\n\r\nfunction App(){\r\n    return <BrowserRouter>\r\n    <Layout>\r\n    <Switch>\r\n    <Route exact path=\"/login\" component={LogIn}></Route>\r\n    <Route exact path=\"/Register\" component={Register}></Route>\r\n    <Route exact path=\"/\" component={Main}></Route>\r\n    <Route exact path=\"/ReactCurso\" component={Main}></Route>\r\n    <Route exact path=\"/Receta\" component={Receta}></Route>\r\n    <Route exact path=\"/Profile\" component={Profile}></Route>\r\n    <Route component={NotFound}></Route>\r\n    </Switch>\r\n    </Layout>\r\n    </BrowserRouter>;\r\n    \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker  from './registerServiceWorker';\n\nconst container = document.getElementById('root');\nReactDOM.render(<App/>,container)\nregisterServiceWorker ();"],"sourceRoot":""}